using Assets.Scripts; using System.Collections; using System.Collections.Generic; using UnityEngine;  public class SkinManager : MonoBehaviour {       public List<GameObject> hunterPrefabs;      public List<Material> hunterPrefabMaterials;     public List<GameObject> cubePrefabs;     public List<Material> cubePrefabMaterials;     public Transform blueTransform;     public Transform redTransform;     public Transform cubePosition;     public static SkinManager instance;     private string activeSkinName;      private GameObject GetHunter(string skinName)     {         GameObject gObject = null;          for (int i = 0; i < hunterPrefabs.Count; i++)         {             if (hunterPrefabs[i].name == skinName)             {                 gObject = hunterPrefabs[i] as GameObject;                 break;             }         }          return gObject;     }      private List<Material> GetHunterMaterials(string skinName)     {         List<Material> materials = new List<Material>();         for (int i = 0; i < hunterPrefabs.Count; i++)         {             if (hunterPrefabs[i].name == skinName)             {                 int tmpIndex = 4 * i;                 materials.Add(hunterPrefabMaterials[tmpIndex]);                 materials.Add(hunterPrefabMaterials[tmpIndex + 1]);                 materials.Add(hunterPrefabMaterials[tmpIndex + 2]);                 materials.Add(hunterPrefabMaterials[tmpIndex + 3]);                 break;             }         }           return materials;     }      private GameObject GetCube(string skinName)     {         GameObject gObject = null;          for (int i = 0; i < cubePrefabs.Count; i++)         {             if (cubePrefabs[i].name == skinName + "_Cube")             {                 gObject = cubePrefabs[i] as GameObject;                 break;             }         }         return gObject;     }      private List<Material> GetCubeMaterials(string skinName)     {         List<Material> materials = new List<Material>();          for (int i = 0; i < cubePrefabs.Count; i++)         {             if (cubePrefabs[i].name == skinName + "_Cube")             {                 int tmpIndex = 3 * i;                 materials.Add(cubePrefabMaterials[tmpIndex]);                 materials.Add(cubePrefabMaterials[tmpIndex + 1]);                 materials.Add(cubePrefabMaterials[tmpIndex + 2]);                 break;             }         }          return materials;              }      public List<string> SkinNames()     {         List<string> names = new List<string>();           foreach (GameObject item in hunterPrefabs)         {             names.Add(item.name);         }          return names;     }      private void Awake()     {         if (DataManager.instance != null)         {             activeSkinName = DataManager.instance.skinName;         }         else         {             activeSkinName = DataManager.instance.ReadStringData(DataKeys.skinNameKey);         }          instance = this;          // index 0 : Red Hunter Material         // index 1 : Blue Hunter Material          //List<Material> hunterMaterials = GetHunterMaterials("Hunter_01");         GameObject hunterObject = GetHunter(activeSkinName) as GameObject;          if (hunterObject != null)         {                          GameObject redHunter = Instantiate(hunterObject) as GameObject;             redHunter.GetComponent<Renderer>().material = hunterPrefabMaterials[0];             redHunter.transform.GetChild(0).GetComponent<Renderer>().material = hunterPrefabMaterials[0];             redHunter.name = "Red Hunter";             redHunter.transform.position = redTransform.position;             Hunter h = redHunter.AddComponent<Hunter>() as Hunter;             h.side = Side.Red;             h.movementSpeed = 7;              GameObject blueHunter = Instantiate(hunterObject) as GameObject;             blueHunter.GetComponent<Renderer>().material = hunterPrefabMaterials[1];             GameObject gObjectChild = blueHunter.transform.GetChild(0).gameObject;             gObjectChild.GetComponent<Renderer>().material = hunterPrefabMaterials[1];             blueHunter.name = "Blue Hunter";             gObjectChild.transform.eulerAngles = Vector3.zero;             float boundX = blueHunter.GetComponent<BoxCollider>().bounds.size.x;             float childBoundX = gObjectChild.GetComponent<BoxCollider>().bounds.size.x;             gObjectChild.transform.position -= new Vector3((boundX+childBoundX),0,0);             blueHunter.transform.position = blueTransform.position;             Hunter h_2 = blueHunter.AddComponent<Hunter>() as Hunter;             h_2.side = Side.Blue;             h_2.movementSpeed = 7;         }                   //List<Material> cubeMaterials = GetCubeMaterials("Hunter_01");         GameObject cubeObject = GetCube(activeSkinName) as GameObject;         if (cubeObject != null)         {             Cube c = cubeObject.GetComponent<Cube>() as Cube;             c.materials = cubePrefabMaterials;             c.movementSpeed = 7;             cubeObject.transform.position = cubePosition.position;             GameObject.FindGameObjectWithTag("MainCamera").GetComponent<ObjectPooling>().gObjectPrefab = cubeObject;         }     }    } 